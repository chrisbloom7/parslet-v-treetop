module TreetopTest
  grammar DotcomDsl
    rule query
      (qualifier / phrase / keyword)+ <ShallowParsedQuery>
    end

    rule phrase
      '"' quoted_character+ '"' space? <PhraseNode>
    end

    rule quoted_character
      '\\"' / '\\\\' / [^"\\]
    end

    rule keyword
      [a-zA-Z]+ space? <TermNode>
    end

    rule space
      [ \t]+
    end

    rule qualifier
      qualifier_field ":" (phrase / keyword) <QualifierNode>
    end

    rule qualifier_field
      [a-zA-Z]+
    end
  end
end

# - 2 directions
#
# 1. Build structure up
# 2. This is currently a linter that gives us a tree, but we ultimately need a parsed representation (simple parse structure) which can probably be done using Syntax-Oriented Programming to make sense of these nodes and act on them
